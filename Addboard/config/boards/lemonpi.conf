# Rockchip RK3588 octa core 16/32GB RAM SoC Type-C 2x GBE 2x USB3.0 WiFi/BT NVMe eMMC
BOARD_NAME="LemonPi"
BOARDFAMILY="rockchip-rk3588"
BOARD_MAINTAINER="YANXIAOXIH"
BOOTCONFIG="lemonpi-rk3588_defconfig"
BOOT_SOC="rk3588"
KERNEL_TARGET="vendor,edge"
KERNEL_TEST_TARGET="vendor,edge"
FULL_DESKTOP="yes"
BOOT_LOGO="desktop"
BOOT_FDT_FILE="rockchip/rk3588-lemonpi.dtb"
BOOT_SCENARIO="spl-blobs"
BOOT_SUPPORT_SPI="yes"
BOOT_SPI_RKSPI_LOADER="yes"
IMAGE_PARTITION_TABLE="gpt"


## Rename audio devices for lemonpi board
function post_family_tweaks__lemonpi_naming_audios() {
	display_alert "$BOARD" "Renaming lemonpi audios" "info"

	## Insert board name into Armbian MOTD header
	## sed -i '22i VENDORTEMP="${BOARD_NAME}" ' $SDCARD/etc/update-motd.d/10-armbian-header

	## Create udev rules to give friendly names to audio devices
	mkdir -p $SDCARD/etc/udev/rules.d/
	echo 'SUBSYSTEM=="sound", ENV{ID_PATH}=="platform-dp0-sound", ENV{SOUND_DESCRIPTION}="DP0 Audio"' >> $SDCARD/etc/udev/rules.d/90-naming-audios.rules
	echo 'SUBSYSTEM=="sound", ENV{ID_PATH}=="platform-hdmi1-sound", ENV{SOUND_DESCRIPTION}="HDMI1 Audio"' >> $SDCARD/etc/udev/rules.d/90-naming-audios.rules
	echo 'SUBSYSTEM=="sound", ENV{ID_PATH}=="platform-hdmiin-sound", ENV{SOUND_DESCRIPTION}="HDMI-In Audio"' >> $SDCARD/etc/udev/rules.d/90-naming-audios.rules
	echo 'SUBSYSTEM=="sound", ENV{ID_PATH}=="platform-es8388-sound", ENV{SOUND_DESCRIPTION}="ES8388 Audio"' >> $SDCARD/etc/udev/rules.d/90-naming-audios.rules

	return 0
}

## Use the 6.15 kernel source code and patch directory as the edge branch
function post_family_config_branch_edge__lemonpi_use_custom_source() {
	declare -g KERNEL_MAJOR_MINOR="6.15"   
	declare -g KERNELBRANCH="branch:master"
	declare -g KERNELPATCHDIR="archive/rockchip64-6.15"
	declare -g LINUXCONFIG="linux-rockchip-rk3588-edge"
}

## Set VA/PA bits for Redroid on vendor branch
function post_family_config_branch_vendor__lemonpi_naming_redroid() {

    ## Set VA BITS to 39 and PA BITS to 48 for ARM64
	function armbian_kernel_config__force_pa_va_48_bits_on_arm64() {
		declare -A opts_val=()
		declare -a opts_y=() opts_n=()
		if [[ "${ARCH}" == "arm64" ]]; then
			opts_y+=("CONFIG_ARM64_VA_BITS_39")
			opts_val["CONFIG_ARM64_PA_BITS"]="48"
		fi
		armbian_kernel_config_apply_opts_from_arrays
	}
}