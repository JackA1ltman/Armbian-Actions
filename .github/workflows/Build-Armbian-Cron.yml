name: "Build-Armbian-Cron"
on:
  schedule:
    - cron: "0 21 * * *"

  workflow_dispatch:
    inputs:
    
      BOARD:
        type: choice
        description: 'Board'
        options:
        - som3588-cat

      BRANCH:
        type: choice
        description: 'Kernel branch'
        options:
        - edge
        - vendor
        default: 'vendor'

      DESKTOP:
        type: choice
        description: 'DESKTOP'
        options:
        - minimal
        - server
        - xfce
        - gnome
        - cinnamon
        - i3-wm
        - kde-plasma
        default: 'server'

env:
  TZ: Asia/Shanghai

jobs:
  Armbian:  
    runs-on: ubuntu-24.04 
    strategy:
      matrix:
        RELEASE:
          - jammy
          - bookworm
          - noble
          - trixie
          
    steps:
      - name: "Checkout customisations"
        uses: actions/checkout@main
        with:
          fetch-depth: 0
          clean: false
          path: custom
          
      - name: "Checkout Armbian build"
        uses: actions/checkout@main
        with:
          repository: armbian/build
          clean: false
          ref: main
          path: build
          
      - name: "Checkout Armbian os"
        uses: actions/checkout@main
        with:
          repository: armbian/os
          fetch-depth: 0
          clean: false
          path: os
          
      - name: Set Env
        shell: bash
        run: |
          # userspace decode
          if [[ "${{ inputs.DESKTOP }}" == "minimal" ]]; then
            echo "BUILD_DESKTOP="no"" >> $GITHUB_ENV
            echo "BUILD_MINIMAL="yes"" >> $GITHUB_ENV
          elif [[ "${{ inputs.DESKTOP }}" == "server" ]]; then
            echo "BUILD_DESKTOP="no"" >> $GITHUB_ENV
            echo "BUILD_MINIMAL="no"" >> $GITHUB_ENV
          else
            echo "BUILD_DESKTOP="yes"" >> $GITHUB_ENV
            echo "BUILD_MINIMAL="no"" >> $GITHUB_ENV
            echo "DESKTOP_ENVIRONMENT="${{ inputs.DESKTOP }}"" >> $GITHUB_ENV
            echo "DESKTOP_APPGROUPS_SELECTED="browsers"" >> $GITHUB_ENV
            echo "DESKTOP_ENVIRONMENT_CONFIG_NAME="config_base"" >> $GITHUB_ENV
          fi

          # read version from upstream Armbian OS
          echo "CURRENT_YEAR_MONTH=$(date +'%Y%m')" >> $GITHUB_ENV
          echo "VERSIONOS=$(cat build/VERSION)" >> $GITHUB_ENV
         
          # copy os userpatches
          mkdir -p  ./build/userpatches
          cp -rf ./custom/config/* ./build/config
          cp -rf ./custom/userpatches/* ./build/userpatches
          cp -rf ./os/userpatches/* ./build/userpatches
      - name: Compile Armbian [ ${{ inputs.BOARD }} ${{ inputs.RELEASE }} ]
        shell: bash
        run: |
          # go to build folder
          cd ./build

          # execute build command
          ./compile.sh \
          BOARD=${{ inputs.BOARD }} \
          BRANCH=${{ inputs.BRANCH }} \
          RELEASE=${{ matrix.RELEASE }} \
          BUILD_MINIMAL=${{ env.BUILD_MINIMAL }} \
          BUILD_DESKTOP=${{ env.BUILD_DESKTOP }} \
          KERNEL_CONFIGURE=no \
          DESKTOP_ENVIRONMENT=${{ env.DESKTOP_ENVIRONMENT }} \
          DESKTOP_ENVIRONMENT_CONFIG_NAME=${{ env.DESKTOP_ENVIRONMENT_CONFIG_NAME }} \
          DESKTOP_APPGROUPS_SELECTED=${{ env.DESKTOP_APPGROUPS_SELECTED }} \
          EXPERT=${{ env.expert }} \
          BOARD_FIRMWARE_INSTALL="-full" \
          USE_CCACHE=yes \
          SHARE_LOG=no \
          DEBUG=yes \
          VENDOR=Armbian \
          COMPRESS_OUTPUTIMAGE=sha,gpg,xz

      - name: "Generate body file"
        if: success()
        run: |
            echo "
              <p align='center'>
              <a href='https://www.armbian.com'>
              <img src='https://raw.githubusercontent.com/armbian/.github/master/profile/tux-two.png' width='400'></a></p>
              <h1 align=center>Armbian OS</h1>
              <p align=center>
              <a href='https://www.armbian.com'><img alt='Armbian Linux stable' src='https://img.shields.io/badge/dynamic/json?label=Armbian%20Linux%20current&query=CURRENT&color=f71000&cacheSeconds=600&style=for-the-badge&url=https%3A%2F%2Fgithub.com%2Farmbian%2Fscripts%2Freleases%2Fdownload%2Fstatus%2Frunners_capacity.json'></a>
              <a href='https://www.armbian.com'><img alt='Armbian Linux rolling' src='https://img.shields.io/badge/dynamic/json?label=Armbian%20Linux%20edge&query=EDGE&color=34be5b&cacheSeconds=600&style=for-the-badge&url=https%3A%2F%2Fgithub.com%2Farmbian%2Fscripts%2Freleases%2Fdownload%2Fstatus%2Frunners_capacity.json'></a>
              </p>
              <br>

              - Board: ${{ inputs.BOARD }} 
              - Version: V${{ env.VERSIONOS }} 
              - Verification: sha256sum 
              
              Please note that Armbian Rolling Releases are not recommended for production environments, as these builds are not thoroughly tested. However, in most cases, they should work well. 
              <br>
              &nbsp;
              </p>" > body.html
      - name: Upload Armbian to Release 
        uses: ncipollo/release-action@main
        if: success()
        with:
          tag: "Armbian_V${{ env.VERSIONOS }}"
          name: "Armbian_V${{ env.VERSIONOS }}"
          artifacts: "build/output/images/*"
          allowUpdates: true
          removeArtifacts: false
          replacesArtifacts: true
          token: ${{ secrets.GITHUB_TOKEN }}
          bodyFile: "body.html"
